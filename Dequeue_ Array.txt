#include<stdio.h>
#include<stdlib.h>
#define N 5

int dequeue[N];
int front=-1;
int rear=-1;

void enqueue_front()
{
	int data;
	printf("\nEnter data to enqueue: \n");
	scanf("%d", &data);
	if((front == -1 && rear == N-1) || (front == rear+1))
	{
		printf("\nDequeue is full \n");
	}
	else if(front == -1 && rear == -1)
	{
		front = rear =0;
		dequeue[front] = data;
	}
	else if(front == 0)
	{
		front = N-1;
		dequeue[front] = data;
	}
	else
	{
		front --;
		dequeue[front] = data;
	}
}

void enqueue_rear()
{
	int data;
	printf("\nEnter data to enqueue: \n");
	scanf("%d", &data);
	if((front == -1 && rear == N-1) || (front == rear+1))
	{
		printf("\nDequeue is full \n");
	}
	else if(front == -1 && rear == -1)
	{
		front = rear =0;
		dequeue[rear] = data;
	}
	else if(rear == N - 1)
	{
		rear = 0;
		dequeue[rear] = data;
	}
	else
	{
		rear ++;
		dequeue[rear] = data;
	}
}

void dequeue_front()
{
	if(front == -1 && rear == -1)
	{
		printf("\nDequeue is Empty\n");
	}
	else if(front == rear)
	{
		printf("\nThe Dequeued element is %d", dequeue[front]);
		front = rear = -1;
	}
	else if(front == N - 1)
	{
		printf("\nThe Dequeued element is %d", dequeue[front]);
		front = 0;
	}
	else
	{
		printf("\nThe Dequeued element is %d", dequeue[front]);
		front ++;	
	}
}

void dequeue_rear()
{
	if(front == -1 && rear == -1)
	{
		printf("\nDequeue is Empty\n");
	}
	else if(front == rear)
	{
		printf("\nThe Dequeued element is %d", dequeue[rear]);
		front = rear = -1;
	}
	else if(rear == 0)
	{
		printf("\nThe Dequeued element is %d", dequeue[rear]);
		rear = N - 1;
	}
	else
	{
		printf("\nThe Dequeued element is %d", dequeue[rear]);
		rear --;	
	}
}

void get_front()
{
	printf("\nThe data value at front is :%d\n", dequeue[front]);
}

void get_rear()
{
	printf("\nThe data value at rear is :%d\n", dequeue[rear]);
}

void display()
{
	int i = front;
	if(front == -1 && rear == -1)
	{
		printf("Queue is empty\n");
	}
	else
	{
		printf("\nThe data values of Dequeue is : \n");
		while(i != rear)
		{
			printf("%d\t", dequeue[i]);
			i = (i + 1) % N;
		}
		printf("%d\n", dequeue[rear]);
	}
}

int main()
{
	int choice;
	printf("\n\t\t\tDEQUEUE OPERATIONS USING ARRAY");
	printf("\n\t\t\t****----------------------****\n");
	
	do
	{
		printf("\nEnter choice:\n1.Enqueue from Front\n2.Equeue from Rear\n3.Dequeue from Front\n4.Dequeue from Rear\n5.Peak from Front\n6.Peak from Rear\n7.Display\n0.Exit\n");
		scanf("%d", &choice);
		{
			switch(choice)
			{
				case 1:
					enqueue_front();
					break;
					
				case 2:
					enqueue_rear();
					break;
					
				case 3:
					dequeue_front();
					break;
					
				case 4:
					dequeue_rear();
					break;
					
				case 5: 
				    get_front();
				    break;
				    
				case 6:
					get_rear();
					break;
				
				case 7:
					display();
					break;
					
				default:
					printf("Wrong Choice\n");
			}
		}
	}
	while(choice!=0);
	
	printf("Exit Programme\n");
	return 0;
} 