#include<stdio.h>
#include<stdlib.h>

struct node
{
	int data;
	struct node *link;
};
struct node *top = 0;

void push(int data);
void pop(void);
void peek(void);
void display(void);

int main()
{
	int data, choice;
	printf("\n\t\t\tSTACK OPERATIONS USING LINKED LIST");
	printf("\n\t\t\t****--------------------------****\n");
	do
	{
		printf("\nEnter choice:\n1.Push\t2.Pop\t3.Peek\t4.Display\t0.Exit\n");
		scanf("%d", &choice);
		{
			switch(choice)
			{
				case 1:
					printf("Enter the data to be pushed: \n");
					scanf("%d",&data);
					push(data);
					break;
					
				case 2:
					pop();
					break;
					
				case 3:
					peek();
					break;
					
				case 4:
					display();
					break;
					
				default:
					printf("Wrong Choice\n");
			}
		}
	}
	while(choice!=0);
	
	printf("Exit Programme\n");
	return 0;
}

void push(int data)
{
	struct node *newnode;
	newnode = (struct node*)malloc(sizeof(struct node));
	newnode->data = data;
	newnode->link = top;
	top = newnode;
}

void display()
{
	struct node *temp;
	printf("The data values of Stack are: \n");
	temp = top;
	if(top == 0)
	{
		printf("Stack is Empty\n");
	}
	else
	{
		while(temp != 0)
		{
			printf("%d\t", temp->data);
			temp = temp->link;
		}
	}
}

void peek()
{
	if (top == 0)
	{
		printf("Stack is Empty\n");
	}
	else
	{
		printf("Top element is %d\n", top->data);
	}
}

void pop()
{
	  struct node *temp;
	  temp = top;
	  if (top == 0)
	  {
	  	printf("Stack is empty\n");
	  }
	  else
	  {
	  	printf("The popped element is %d", top->data);
	  	top = top->link;
	  	free(temp);
	  }
}
