#include<stdio.h>
#include<stdlib.h>
#define N 5

int queue[N];
int front = -1;
int rear = -1;

void enqueue();
void dequeue();
void peek();
void display();

int main()
{
	int choice;
	printf("\n\t\t\tQUEUE OPERATIONS USING ARRAY");
	printf("\n\t\t\t****--------------------****");
	
	do
	{
		printf("\nEnter choice:\n1.Enqueue\t2.Dequeue\t3.Peek\t4.Display\t0.Exit\n");
		scanf("%d", &choice);
		{
			switch(choice)
			{
				case 1:
					enqueue();
					break;
					
				case 2:
					dequeue();
					break;
					
				case 3:
					peek();
					break;
					
				case 4:
					display();
					break;
					
				default:
					printf("Wrong Choice\n");
			}
		}
	}
	while(choice!=0);
	
	printf("Exit Programme\n");
	return 0;
} 

void enqueue()
{
	int data;
	printf("Enter data to enqueue: \n");
	scanf("%d", &data);
	if (rear == N-1)
	{
		printf("Overflow\n");
	
	}
	else if (front == -1 && rear == -1 )
	{
		front = rear = 0;
		queue[rear] = data;
	}
	else
	{
		rear++;
		queue[rear] = data;
	} 	
}

void dequeue()
{
	if(front == -1 && rear == -1)
	{
		printf("Underflow\n");
	}
	else if(front == rear)
	{
		front = rear = -1;
	}
	else
	{
		printf("The dequeued value is %d\n", queue[front]);
		front++;
	}
}

void display()
{
	int i;
	if(front == -1 && rear == -1)
	{
		printf("Queue is empty\n");
	}
	else
	{
		printf("The data values of Queue are: \n");
		for(i = front; i <= rear+1; i++)
		{
			printf("%d\t", queue[i]);
		}
	}
}

void peek()
{
	if(front == -1 && rear == -1)
	{
		printf("Queue is empty\n");
	}
	else
	{
		printf("The top value is %d\n", queue[front]);
	}
} 