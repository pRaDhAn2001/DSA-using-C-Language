#include<stdio.h>
#include<stdlib.h>
#define N 5

int queue[N];
int front=-1;
int rear=-1;

void enqueue()
{
	int data;
	printf("\nEnter data to enqueue: \n");
	scanf("%d", &data);
	if(front == -1 && rear == -1)
	{
		front = rear =0;
		queue[rear] = data;
	}
	else if((rear+1)%N == front)
	{
		printf("\nQueue is full\n");
	}
	else
	{
		rear = (rear + 1) % N;
		queue[rear] = data;
	}
}

void dequeue()
{
	if(front == -1 && rear == -1)
	{
		printf("\nQueue is Empty\n");
	}
	else if(front == rear)
	{
		printf("\nThe Dequeued element is %d", queue[front]);
		front = rear = -1;
	}
	else
	{
		printf("\nThe Dequeued element is %d", queue[front]);
		front = (front + 1) % N;
	}
}

void peek()
{
	if(front == -1 && rear == -1)
	{
		printf("\nQueue is empty\n");
	}
	else
	{
		printf("\nThe top value is %d\n", queue[front]);
	}
} 

void display()
{
	int i = front;
	if(front == -1 && rear == -1)
	{
		printf("Queue is empty\n");
	}
	else
	{
		printf("The data values of Queue is : \n");
		while(i != rear)
		{
			printf("%d\t", queue[i]);
			i = (i + 1) % N;
		}
		printf("%d", queue[rear]);
	}
}

int main()
{
	int choice;
	printf("\n\t\t\tCIRCULAR QUEUE OPERATIONS USING ARRAY");
	printf("\n\t\t\t****-----------------------------****");
	
	do
	{
		printf("\nEnter choice:\n1.Enqueue\t2.Dequeue\t3.Peek\t4.Display\t0.Exit\n");
		scanf("%d", &choice);
		{
			switch(choice)
			{
				case 1:
					enqueue();
					break;
					
				case 2:
					dequeue();
					break;
					
				case 3:
					peek();
					break;
					
				case 4:
					display();
					break;
					
				default:
					printf("Wrong Choice\n");
			}
		}
	}
	while(choice!=0);
	
	printf("Exit Programme\n");
	return 0;
} 