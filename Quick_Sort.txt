#include<stdio.h>
#include<stdlib.h>

int partition(int arr[], int lb, int ub);
void quick_sort(int arr[], int lb, int ub);
void swap(int* a, int* b);

int main()
{
	int i, j, size;
	printf("\t\t\tQUICK SORT PROGRAMME\t\t\t\n");
	printf("\t\t\t*****----------*****\t\t\t\n");
	printf("Enter the size of the Array :\n");
	scanf("%d", &size);
	
	int arr[size];
	printf("Enter the Elements of the Array: \n");
	for(i=0; i<size; i++)
	{
		scanf("%d", &arr[i]);
	}
	
	printf("\n\nOriginal Order of given Elements is :\n");
	for(i=0; i<size; i++)
	{
		printf("%d\t", arr[i]); 
	}

	quick_sort(arr,0,size);
	
	printf("\n\nSorted Order of given Elements is :\n");
	for(i=0; i<size; i++)
	{
		printf("%d\t", arr[i]); 
	}

	return 0;
}	

int partition(int arr[], int lb, int ub)
{
	int pivot = arr[lb];
	int start = lb;
	int end = ub;
	int i, temp;
	while(start < end)
	{
		while(arr[start] <= pivot)
		{
			start++;
		}
		while(arr[end] > pivot)
		{
			end--;
		}
		if(start < end)
		{
			swap(&arr[start], &arr[end]);		
		}
	}
	swap(&arr[lb], &arr[end]);
	return end;
} 

void swap(int* a, int* b)
{
	int t = *a;
	*a = *b;
	*b = t;
}

void quick_sort(int arr[], int lb, int ub)
{
	int loc;
	if(lb < ub)
	{
		loc = partition(arr,lb,ub);
		quick_sort(arr, lb, loc-1);
		quick_sort(arr, loc+1, ub);
	}
}