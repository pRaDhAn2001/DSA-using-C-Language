#include<stdio.h>
#include<stdlib.h>

struct node
{
	int data;
	struct node *left, *right;
};

struct node *create()
{
	int data;
	struct node *newnode;
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("Enter Data (-1 for no node)\n");
	scanf("%d", &data);
	if(data == -1)	
	{
		return 0;
	}
	newnode->data = data;
	printf("Enter Left Child of %d\n", data);
	newnode->left=create();
	printf("Enter Right Child of %d\n", data);
	newnode->right = create();
}

void preorder(struct node *root)
{
	if(root == 0)
	{
		return;
	}
	printf("%d\t", root->data);
	preorder(root->left);
	preorder(root->right);
}

void inorder(struct node *root)
{
	if(root == 0)
	{
		return;
	}
	inorder(root->left);
	printf("%d\t", root->data);
	inorder(root->right);
}

void postorder(struct node *root)
{
	if(root == 0)
	{
		return;
	}
	postorder(root->left);
	postorder(root->right);
	printf("%d\t", root->data);
}


int main()
{
	struct node *root;
	root = 0;
	printf("\n\t\t\tBINARY TREE TRAVERSAL PROGRAMME\t\t\t\n");
	printf("\t\t\t****-----------------------****\t\t\t\n\n");
	
	root = create();
	
	printf("\nPreorder is : \n");
	preorder(root);
	printf("\n");
	
	printf("Inorder is : \n");
	inorder(root);
	printf("\n");
	
	printf("Postorder is : \n");
	postorder(root);
	printf("\n");
	
	return 0;
}